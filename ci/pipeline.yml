---
groups:
- name: development
  jobs:
    - test-develop
    - deploy-develop
- name: staging
  jobs:
    - test-release
    - deploy-staging
    - sonar
    - acceptance
- name: production
  jobs:
    - merge-release-to-master
    - test-master
    - tag-master
    - bump-version
    - deploy-prod
    - merge-release-to-develop

resources:
  - name: repo-develop
    type: git
    source:
      uri: git@github.com:pivotalservices/sample-spring-cloud-svc-ci.git
      branch: develop
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-release
    type: git
    source:
      uri: git@github.com:pivotalservices/sample-spring-cloud-svc-ci.git
      branch: release
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-master
    type: git
    source:
      uri: git@github.com:pivotalservices/sample-spring-cloud-svc-ci.git
      branch: master
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: version
    type: semver
    source:
      uri: git@github.com:pivotalservices/sample-spring-cloud-svc-ci.git
      branch: version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 1.0.0

  - name: cf-prod
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-prod}}
      skip_cert_check: true

  - name: cf-staging
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-staging}}
      skip_cert_check: true

  - name: cf-dev
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-dev}}
      skip_cert_check: true

  - name: m2
    type: docker-image
    source:
      repository: malston/m2

jobs:
  - name: test-develop
    serial: true
    public: true
    plan:
      - aggregate:
        - get: m2
        - get: repo
          resource: repo-develop
          trigger: true
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: malston/gradle-java-8
          inputs:
            - name: repo
            - name: m2
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/unit.sh"]

  - name: deploy-develop
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-develop
          passed: [ test-develop ]
          trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: malston/gradle-java-8
          inputs:
            - name: repo
            - name: m2
          outputs:
            - name: build
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/build.sh"]
          params:
            _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-dev
        params:
          manifest: repo/manifest-dev.yml
          path: build/sample-spring-cloud-svc-ci.jar
          current_app_name: sample-spring-cloud-svc-ci-dev

  - name: test-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-release
          trigger: true
        - get: m2
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: malston/gradle-java-8
          inputs:
            - name: repo
            - name: m2
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/unit.sh"]

  - name: deploy-staging
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-release
          passed: [ test-release ]
          trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: malston/gradle-java-8
          inputs:
            - name: repo
            - name: m2
          outputs:
            - name: build
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/build.sh"]
          params:
            _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-staging
        params:
          manifest: repo/manifest-stg.yml
          path: build/sample-spring-cloud-svc-ci.jar
          current_app_name: sample-spring-cloud-svc-ci-staging

  - name: merge-release-to-master
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
        - get: repo-release
          passed: [ test-release ]
      - task: merge-release-to-master
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: getourneau/alpine-bash-git
          inputs:
            - name: repo
            - name: repo-release
          outputs:
            - name: out
          run:
            path: /bin/bash
            args:
            - repo-release/ci/tasks/merge-release-branch.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out

  - name: test-master
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
          # comment out below to support hotfix
          passed: [ merge-release-to-master ]
          trigger: true
        - get: m2
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: java
          inputs:
            - name: repo
            - name: m2
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/unit.sh"]

  - name: tag-master
    public: true
    plan:
      - aggregate:
        - get:  repo
          resource: repo-master
          passed: [ test-master ]
          trigger: true
        - get: repo-release
        - get: version
        - get: m2
      - task: bump-to-release-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: java
              tag: 8-jdk
          inputs:
            - name: version
            - name: repo
            - name: repo-release
            - name: m2
          outputs:
            - name: out
          run:
            path: /bin/bash
            args:
              - repo-release/ci/tasks/bump-to-release-version.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out
          tag: version/number

  - name: bump-version
    public: true
    plan:
      - aggregate:
        - get:  repo-master
          passed: [ tag-master ]
          trigger: true
        - get:  repo
          resource: repo-release
        - get: version
          params: {bump: minor}
        - get: m2
      - task: bump-to-next-develop-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: java
              tag: 8-jdk
          inputs:
            - name: version
            - name: repo
            - name: repo-master
            - name: m2
          outputs:
            - name: out
          run:
            path: /bin/bash
            args:
              - repo/ci/tasks/bump-to-next-develop-version.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-release
        params:
          repository: out
      - put: version
        params: {file: version/number}

  - name: merge-release-to-develop
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
        - get: repo-release
          passed: [ bump-version ]
          trigger: true
      - task: merge-release-to-develop
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: getourneau/alpine-bash-git
          inputs:
            - name: repo
            - name: repo-release
          outputs:
            - name: out
          run:
            path: /bin/bash
            args:
            - repo-release/ci/tasks/merge-release-branch.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-develop
        params:
          repository: out

  - name: deploy-prod
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-master
          passed: [ tag-master ]
          trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: malston/gradle-java-8
          inputs:
            - name: repo
            - name: m2
          outputs:
            - name: build
          run:
            path: /bin/bash
            args: ["-c", "repo/ci/tasks/build.sh"]
          params:
            _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-prod
        params:
          manifest: repo/manifest.yml
          path: build/sample-spring-cloud-svc-ci.jar
          current_app_name: sample-spring-cloud-svc-ci

  - name: acceptance
    plan:
    - aggregate:
      - get: repo
        resource: repo-release
        passed: [deploy-staging]
        trigger: true
    - task: cats
      config:
        image_resource:
          type: docker-image
          source:
            repository: malston/gradle-java-8
        platform: linux
        inputs:
          - name: repo
        run:
          path: /bin/bash
          args: ["-c", "repo/ci/tasks/cats.sh", "acceptance"]
        params:
          URL: {{test-url}}

  - name: smoke
    plan:
    - aggregate:
      - get: repo
        resource: repo-release
        passed: [deploy-staging]
        trigger: true
    - task: cats
      config:
        image_resource:
          type: docker-image
          source:
            repository: malston/gradle-java-8
        platform: linux
        inputs:
          - name: repo
        run:
          path: /bin/bash
          args: ["-c", "repo/ci/tasks/cats.sh", "smoke"]
        params:
          URL: {{test-url}}

  - name: sonar
    plan:
    - get: repo
      resource: repo-release
      passed: [ test-release ]
      trigger: true
    - task: publish-quality-metrics
      config:
        image_resource:
          type: docker-image
          source:
            repository: malston/gradle-java-8
        platform: linux
        inputs:
          - name: repo
        run:
          path: /bin/bash
          args: ["-c", "repo/ci/tasks/sonar.sh"]
        params:
          SONAR_URL: {{sonar-url}}
